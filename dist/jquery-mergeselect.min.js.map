{"version":3,"sources":["jquery-mergeselect.js"],"names":["factory","define","amd","module","exports","require","jQuery","$","setIndexes","$wrap","find","each","i","el","attr","removeClass","focus","window","pluginName","idx","setScroll","$container","$selected","itemMin","offset","top","scrollTop","itemMax","outerHeight","containerMin","containerMax","to","classPrefix","uid","labelTextFunction","settings","this","labelText","push","text","length","placeholder","numDisplayed","overflowText","apply","replace","join","defaults","selects","mergeSelect","$el","$selects","selects_map","index","value","id","create","prototype","multiple","is","append","addClass","reload","self","showSearch","search","searchText","prepend","choices","buildOptions","get","html","reloadDropdownLabel","$element","$this","$select","closest","has_multiple","tagName","data","children","prop","toLowerCase","selected","checked","input_type","change","fn","options","extend","active","document","on","$option","_mergeSelect","selected_map","map","key","hasMultiple","hasClass","select_id","toggleClass","val","e","which","blur","keywords","regex","RegExp","match","num_visible","target","is_hidden","preventDefault","last_index","parseInt","click"],"mappings":"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","file":"jquery-mergeselect.min.js","sourcesContent":["'use strict';\n// Based by on https://github.com/mgibbs189/fSelect\n// https://github.com/umdjs/umd\n\n// Uses CommonJS, AMD or browser globals to create a jQuery plugin.\n\n// Similar to jqueryPlugin.js but also tries to\n// work in a CommonJS environment.\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define(['jquery'], factory);\n    } else if (typeof module === 'object' && module.exports) {\n        // Node/CommonJS\n        module.exports = factory(require('jquery'));\n    } else {\n        // Browser globals\n        factory(jQuery);\n    }\n}(function ($) {\n    var pluginName = 'mergeSelect';\n    var classPrefix = '.' + pluginName + ' ';\n\n    var uid = function (i) {\n        return function () {\n            return pluginName + '-' + (++i);\n        };\n    }(0);\n\n    var labelTextFunction = function () {\n        var settings = this.settings;\n        var labelText = [];\n\n        this.$wrap.find('.option.selected').each(function (i, el) {\n            labelText.push($(el).find('.option-label').text());\n        });\n\n        if (labelText.length < 1) {\n            labelText = settings.placeholder;\n        }\n        else if (labelText.length > settings.numDisplayed) {\n            var overflowText = settings.overflowText;\n            if (typeof overflowText == 'function') {\n                overflowText = overflowText.apply(this, [labelText])\n            }\n            labelText = overflowText.replace('{n}', labelText.length);\n        }\n        else {\n            labelText = labelText.join(', ');\n        }\n        return labelText\n    };\n\n    var defaults = {\n        selects: null,\n        placeholder: 'Select some options',\n        numDisplayed: 3,\n        overflowText: '{n} selected',\n        labelText: labelTextFunction,\n    };\n\n    /*\n     Constructor\n     */\n    var mergeSelect = function (el, settings) {\n        this.el = el;\n        this.$el = $(el);\n        this.settings = settings;\n        this.selects = settings.selects;\n        this.$selects = $(this.selects);\n        this.selects_map = {}\n        var selects_map = this.selects_map;\n\n        this.$selects.each(function (index, value) {\n            if (!value.id) {\n                value.id = uid();\n            }\n            selects_map[value.id] = $(value);\n        });\n\n        this.create();\n    };\n\n    mergeSelect.prototype = {\n        create: function () {\n            // TODO добавить возможность объединения разных типов\n            var multiple = this.$selects.is('[multiple]') ? ' multiple' : '';\n            this.$el.append('<div class=\"' + pluginName + '\"></div>');\n            var $container = this.$el.find('.' + pluginName);\n\n            $container.append('<div class=\"wrap' + multiple + '\"></div>');\n\n            var $wrap = $container.find('.wrap');\n\n            $wrap.append(\n                '<div class=\"label-wrap\">'\n                + '<div class=\"label\">'\n                + this.settings.placeholder\n                + '</div>'\n                + '<span class=\"arrow\"></span></div>'\n            );\n\n            $wrap.append('<div class=\"dropdown hidden\">'\n                + '<div class=\"options\">'\n                + '</div></div>');\n\n            $wrap.addClass('hidden');\n\n            this.$container = $container;\n\n            this.$wrap = $wrap;\n\n            this.reload();\n        },\n        reload: function () {\n            var self = this;\n            if (this.settings.showSearch) {\n                var search = '<div class=\"search\"><input type=\"search\" placeholder=\"' + this.settings.searchText + '\" /></div>';\n                this.$wrap.find('.dropdown').prepend(search);\n            }\n\n            var choices = '';\n            this.$selects.each(function (index, value) {\n                    choices += self.buildOptions($(value))\n                }\n            ).get();\n            this.$wrap.find('.options').html(choices);\n            this.reloadDropdownLabel();\n        },\n\n        buildOptions: function ($element) {\n            var $this = this;\n            var choices = '';\n            var $select = $element.closest('select');\n            var has_multiple = $select.is('[multiple]');\n\n            if ($element.tagName == 'select' || $element.data('label')) {\n                // TODO formgroup\n                choices += '<div class=\"optgroup\">';\n                choices += '<div class=\"optgroup-label\">' + $element.data('label') + '</div>';\n                choices += '</div>';\n            }\n\n            $element.children().each(function (i, el) {\n                var $el = $(el);\n\n                if ('optgroup' == $el.prop('nodeName').toLowerCase()) {\n                    choices += '<div class=\"optgroup\">';\n                    choices += '<div class=\"optgroup-label\">' + $el.prop('label') + '</div>';\n                    choices += $this.buildOptions($el);\n                    choices += '</div>';\n                }\n                else {\n                    var selected = $el.is(':selected') ? ' selected' : '';\n                    var checked = selected ? 'checked=\"checked\"' : '';\n                    var input_type = has_multiple ? 'checkbox' : 'radio';\n\n                    choices += '<div class=\"option'\n                        + selected + '\" data-value=\"'\n                        + $el.prop('value')\n                        + '\"'\n                        + 'data-select-id=\"' + $select.prop('id')\n                        + '\"><div class=\"option-label\"><input type=\"' + input_type + '\"' + checked + '\"/>'\n                        + $el.html()\n                        + '</div></div>';\n                }\n            });\n\n            return choices;\n        },\n        reloadDropdownLabel: function () {\n            var labelText = this.settings.labelText.apply(this);\n            this.$wrap.find('.label').html(labelText);\n\n            this.$selects.each(function (index, value) {\n                $(value).change()\n\n            });\n        }\n\n    };\n\n\n    $.fn[pluginName] = function (options) {\n\n        var settings = $.extend(defaults, options);\n\n        return this.each(function () {\n            var $container = $(this).find(classPrefix);\n            var data = $container.data(pluginName);\n\n            if (!data) {\n                data = new mergeSelect(this, settings);\n                data.$container.data(pluginName, data);\n            }\n\n            if (typeof settings == 'string') {\n                data[settings]();\n            }\n        });\n\n    };\n\n    /* Events */\n    window[pluginName] = {\n        'active': null,\n        'idx': -1\n    };\n    function setIndexes($wrap) {\n        $wrap.find('.option:not(.hidden)').each(function (i, el) {\n            $(el).attr('data-index', i);\n            $wrap.find('.option').removeClass('hl');\n        });\n        $wrap.find('.search input').focus();\n        window[pluginName].idx = -1;\n    }\n\n    function setScroll($wrap) {\n        var $container = $wrap.find('.options');\n        var $selected = $wrap.find('.option.hl');\n\n        var itemMin = $selected.offset().top + $container.scrollTop();\n        var itemMax = itemMin + $selected.outerHeight();\n        var containerMin = $container.offset().top + $container.scrollTop();\n        var containerMax = containerMin + $container.outerHeight();\n\n        if (itemMax > containerMax) { // scroll down\n            var to = $container.scrollTop() + itemMax - containerMax;\n            $container.scrollTop(to);\n        }\n        else if (itemMin < containerMin) { // scroll up\n            var to = $container.scrollTop() - containerMin - itemMin;\n            $container.scrollTop(to);\n        }\n    }\n\n    $(document).on('click', classPrefix + '.option', function () {\n        var $option = $(this);\n        var $wrap = $option.closest('.wrap');\n\n        var $container = $wrap.closest(classPrefix);\n        var _mergeSelect = $container.data(pluginName);\n\n        var selected_map = {};\n        $.map(_mergeSelect.selects_map, function (value, key) {\n            selected_map[key] = null;\n        });\n\n\n        var hasMultiple = $wrap.hasClass('multiple');\n        /* todo mixin multiple and simple select */\n        if (!hasMultiple) {\n            /* TODO remove from only select */\n            var select_id = $option.data('select-id');\n\n            $wrap.find(\".option[data-select-id='\" + select_id + \"']\")\n                .removeClass('selected')\n                .find('input').prop('checked', null)\n            ;\n\n            $option.addClass('selected').find('input').prop('checked', true);\n            $wrap.find('.dropdown').addClass('hidden');\n        }\n\n        if (hasMultiple) {\n            $option.toggleClass('selected');\n            $option.find('input').prop('checked', $option.hasClass('selected'));\n        }\n\n        $wrap.find('.option.selected').each(function (i, el) {\n            var $el = $(el);\n            var selected = selected_map[$el.data('select-id')] || [];\n            selected.push($el.data('value'));\n            selected_map[$el.data('select-id')] = selected;\n        });\n\n        $.map(selected_map, function (value, key) {\n            var $select = _mergeSelect.selects_map[key];\n            $select.val(value);\n            _mergeSelect.reloadDropdownLabel();\n        });\n    });\n\n\n    $(document).on('keyup', classPrefix + '.search input', function (e) {\n        if (40 == e.which) {\n            $(this).blur();\n            return;\n        }\n\n        var $wrap = $(this).closest('.wrap');\n        var keywords = $(this).val();\n\n        $wrap.find('.option, .optgroup-label').removeClass('hidden');\n\n        if ('' != keywords) {\n            $wrap.find('.option').each(function () {\n                var regex = new RegExp(keywords, 'gi');\n                if (null === $(this).find('.option-label').text().match(regex)) {\n                    $(this).addClass('hidden');\n                }\n            });\n\n            $wrap.find('.optgroup-label').each(function () {\n                var num_visible = $(this).closest('.optgroup').find('.option:not(.hidden)').length;\n                if (num_visible < 1) {\n                    $(this).addClass('hidden');\n                }\n            });\n        }\n\n        setIndexes($wrap);\n    });\n\n    $(document).on('click', function (e) {\n        var $el = $(e.target);\n        var $wrap = $el.closest('.wrap');\n\n        if (0 < $wrap.length) {\n            if ($el.hasClass('label')) {\n                window[pluginName].active = $wrap;\n                var is_hidden = $wrap.find('.dropdown').hasClass('hidden');\n                $('.dropdown').addClass('hidden');\n\n                if (is_hidden) {\n                    $wrap.find('.dropdown').removeClass('hidden');\n                }\n                else {\n                    $wrap.find('.dropdown').addClass('hidden');\n                }\n\n                setIndexes($wrap);\n            }\n        }\n        else {\n            $('.dropdown').addClass('hidden');\n            window[pluginName].active = null;\n        }\n    });\n\n    $(document).on('keydown', function (e) {\n        var $wrap = window[pluginName].active;\n\n        if (null === $wrap) {\n            return;\n        }\n        else if (38 == e.which) { // up\n            e.preventDefault();\n\n            $wrap.find('.option').removeClass('hl');\n\n            if (window[pluginName].idx > 0) {\n                window[pluginName].idx--;\n                $wrap.find('.option[data-index=' + window[pluginName].idx + ']').addClass('hl');\n                setScroll($wrap);\n            }\n            else {\n                window[pluginName].idx = -1;\n                $wrap.find('.search input').focus();\n            }\n        }\n        else if (40 == e.which) { // down\n            e.preventDefault();\n            var last_index = $wrap.find('.option:last').attr('data-index');\n            if (window[pluginName].idx < parseInt(last_index)) {\n                window[pluginName].idx++;\n                $wrap.find('.option').removeClass('hl');\n                $wrap.find('.option[data-index=' + window[pluginName].idx + ']').addClass('hl');\n                setScroll($wrap);\n            }\n        }\n        else if (32 == e.which || 13 == e.which) { // space, enter\n            $wrap.find('.option.hl').click();\n        }\n        else if (27 == e.which) { // esc\n            $('.dropdown').addClass('hidden');\n            window[pluginName].active = null;\n        }\n    });\n}));\n\n//# sourceMappingURL=jquery-mergeselect.js.map\n"],"sourceRoot":"/source/"}